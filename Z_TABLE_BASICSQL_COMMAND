*ABAP Table mantığı şu şekildedir.
*Table içerisindeki her bir satıra STRUCTURE diyebiliriz.
*Her satırın içindeki bir hücre yani tablo yapısındaki kolonlar ise VARIABLE olarak isimlendirilir.
*VARIABLE tek bir DATA tutar.
*STRUCTURE birden fazla VARIABLE yani birden fazla DATA tutar.
*TABLE ise birden fazla STRUCTURE tutar.

** TABLE'da var olan bir VARIABLE'yi kullanmak :
** TYPE yerine daha önce table yaratırken oluşturduğumuz DATA ELEMENTI yazabiliriz.
** gv_persid içindeki v -> variable manasına gelir.
** gs_pers_t içindeki s -> structure manasına gelir.
** gt_pers_t içindeki t -> table manasına gelir.

********* VARIABLE TANIMLAMASI *********

DATA : gv_persid TYPE ZENG_PERSID_DE,
       gv_persad TYPE ZENG_PERSAD_DE,
       gv_perssoyad TYPE ZENG_PERSSOYAD_DE,
       gv_perscins TYPE ZENG_PERSCINS_DE.

********* STRUCTURE TANIMLAMASI *********
      gs_pers_t TYPE ZENG_PERS_T.


********* TABLE TANIMLAMASI *********

  **gt_pers_t internal table olarak isimlendirilir.

      gt_pers_t TYPE TABLE OF ZENG_PERS_T.

********* TEMEL SQL SORGULARI *********
*SELECT : Veritabanından data çekmek için kullanılır.
*UPDATE : Veritabanındaki satır veya satırları update etmemizi sağlar.
*INSERT : Veritabanına satır ve satırları eklememizi sağlar.
*DELETE : Veritabanından istediğimiz satır ve ya satırları silmemizi sağlar
*MODIFY : UPDATE + INSERT gibi çalışır.

******************************* SELECT KOMUTU *******************************

********* TABLE ÇEKME ********* 

  SELECT * FROM ZENG_PERS_T
** Çektiğimiz dataları bir INTERNAL TABLE'a almak istersen INTO TABLE komutu kullanılır.
    INTO TABLE gt_pers_t.

********* TABLE'dan BELİRLİ ŞARTLARA UYGUN DATALARI ÇEKME *********
  
  SELECT * FROM ZENG_PERS_T
    INTO TABLE gt_pers_t
    WHERE pers_cins EQ E.

** ZENG_PERS_T tablosundan personel cinsiyeti E olan satırları çektim.


********* STRUCTURE ÇEKME *********

  SELECT SINGLE * FROM ZENG_PERS_T
** Çektiğimiz dataları bir INTERNAL TABLE'a almak istersen INTO TABLE komutu kullanılır
    INTO gs_pers_t.

********* STRUCTURE KOLONU ÇEKME *********

  SELECT SINGLE PERS_ID FROM ZENG_PERS_T
    INTO gv_persid.

******************************* UPDATE KOMUTU *******************************
  
** TABLE içerisinde Personal numarası (PERS_ID) 1 olan satırın yani Personel adını (PERS_AD) 'HAKAN' olarak update edecegiz.
  
  UPDATE ZENG_PERS_T SET PERS_AD = 'HAKAN'
     WHERE PERS_ID EQ 1.
     WRITE : 'Update edilmiştir.'.

******************************* INSERT KOMUTU *******************************
** TABLE'mıza STRUCTURE üzerinden yeni bir DATA gireceğiz.
** gs_pers_t internal STRUCTURE'mız tanımlı ama içinde herhangi bir DATA yok şimdi internal STRUCTURE içindeki alanlarımza değer tanımlayacağız.
  
   gs_pers_t~pers_id    = 3.
   gs_pers_t~pers_ad    = 'ENGİN'. 
   gs_pers_t~pers_soyad = 'KISA'. 
   gs_pers_t~pers_cins  = 'E'.
 
   INSERT ZENG_PERS_T FROM gs_pers_t.
     WRITE : 'INSERT edilmiştir.'.

******************************* DELETE KOMUTU *******************************
   

   DELETE FROM ZENG_PERS_T WHERE PERS_ID EQ 3.
     WRITE : 'DELETE edilmiştir.'.


******************************* MODIFY KOMUTU *******************************
** Verilan koşullara uyan satır veya satırlar varsa tamamını update eder.
** Verilen koşullara uyan satır yoksa yeni satır veya satırlar ekler.

********* INSERT GİBİ ÇALIŞMA *********

   gs_pers_t~pers_id    = 4.
   gs_pers_t~pers_ad    = 'ELİF'. 
   gs_pers_t~pers_soyad = 'KARA'. 
   gs_pers_t~pers_cins  = 'K'.

  MODIFY ZENG_PERS_T FROM gs_pers_t
    WRITE : 'MODIFY edilmiştir.'.

********* UPDATE GİBİ ÇALIŞMA *********
** Bir önceki MODIFY komutunda eklediğimiz satırın bir VARIABLE'sini değiştirecegiz.

   gs_pers_t~pers_id    = 4.
   gs_pers_t~pers_ad    = 'ELİF'. 
   gs_pers_t~pers_soyad = 'KARAKUZU'. 
   gs_pers_t~pers_cins  = 'K'.

** Burada pers_soyad dışında tüm VARIABLE'lar aynı oldugu için sadece pers_soyad'ı update edecek.

  MODIFY ZENG_PERS_T FROM gs_pers_t
    WRITE : 'MODIFY edilmiştir.'.

