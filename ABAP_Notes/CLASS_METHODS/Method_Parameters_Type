
************************* METHOD PARAMETER TYPES *************************

********** IMPORTING **********

IMPORTING : Methoda dışarıdan veri gönderilir (girdi parametresi). Methodun içinde bu veri kullanılır, ancak method bu parametrede değişiklik yapmaz.
            Parametre sadece method içinde okunabilir.
            Varsayılan olarak CALL BY VALUE kullanır (yani değerin bir kopyası methoda taşınır).

METHOD calculate_square.
  r_square = i_number * i_number.
ENDMETHOD.

(Çağırma)
DATA: square TYPE i.
square = obj->calculate_square( i_number = 4 ).


********** EXPORTING **********

EXPORTING : Methodun çalışması sonucunda ürettiği veriyi dış dünyaya (çağırana) gönderir (çıktı parametresi).
            Sadece methodun dışına veri taşımak için kullanılır.
            Method dışında kullanılabilir.
            Varsayılan olarak CALL BY VALUE kullanır.

METHOD generate_message.
  e_message = 'Hello, ' && i_name && '!'.
ENDMETHOD.

(Çağırma)
DATA: message TYPE string.
obj->generate_message( EXPORTING i_name = 'Engin' IMPORTING e_message = message ).
WRITE: / message.

********** CHANGING **********

CHANGING  : Parametre hem methoda veri taşır (girdi) hem de methodun çalışması sırasında değişip geri döner (girdi-çıktı parametresi).
            Hem giriş hem de çıkış amacıyla aynı parametreyi kullanmak gerektiğinde tercih edilir.
            Varsayılan olarak CALL BY REFERENCE kullanır (yani, method doğrudan bellekteki orijinal veriyi değiştirir).

METHOD increment_number.
  c_number = c_number + 1.
ENDMETHOD.

(Çağırma)
DATA: number TYPE i VALUE 5.
obj->increment_number( CHANGING c_number = number ).
WRITE: / number. " Çıktı: 6

********** RETURNING **********

RETURNING : Method yalnızca bir değer döndürür (fonksiyon gibi çalışır).
            Methodun yalnızca tek bir değer üretmesi gerektiğinde kullanılır.
            EXPORTING yerine kullanılır, ancak sadece bir değer döndürebilir. Geri döndürülen değer doğrudan bir değişkene atanır.
            Sadece tek bir RETURNING parametresi olabilir ve bu parametre, methodun sonunda RETURN ifadesi ile döndürülür.

METHOD calculate_area.
  r_area = length * width.
ENDMETHOD.

(Çağırma)
DATA: area TYPE i.
area = obj->calculate_area( length = 5 width = 10 ).
WRITE: / area. " Çıktı: 50
